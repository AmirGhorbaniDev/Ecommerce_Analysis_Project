-- SQL Script for Ecommerce Analysis Project

-- 1. Total Sales by Traffic Source
-- Calculates total revenue generated by each traffic source
SELECT 
    u.traffic_source,
    SUM(oi.sale_price) AS total_sales
FROM 
    order_items oi
JOIN 
    orders o ON oi.order_id = o.order_id
JOIN 
    users u ON o.user_id = u.id
GROUP BY 
    u.traffic_source
ORDER BY 
    total_sales DESC;

-- 2. Average Order Value by Traffic Source
-- Determines the average order value for each traffic source
SELECT 
    u.traffic_source,
    AVG(oi.sale_price) AS avg_order_value
FROM 
    order_items oi
JOIN 
    orders o ON oi.order_id = o.order_id
JOIN 
    users u ON o.user_id = u.id
GROUP BY 
    u.traffic_source
ORDER BY 
    avg_order_value DESC;

-- 3. Repeat Customers by Traffic Source
-- Counts the number of repeat customers for each traffic source
SELECT 
    u.traffic_source,
    COUNT(DISTINCT o.user_id) AS repeat_customers
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.id
WHERE 
    (SELECT COUNT(*) FROM orders WHERE user_id = o.user_id) > 1
GROUP BY 
    u.traffic_source
ORDER BY 
    repeat_customers DESC;

-- 4. Total Sales by Gender
-- Calculates total sales split by gender
SELECT 
    u.gender,
    SUM(oi.sale_price) AS total_sales
FROM 
    order_items oi
JOIN 
    orders o ON oi.order_id = o.order_id
JOIN 
    users u ON o.user_id = u.id
GROUP BY 
    u.gender
ORDER BY 
    total_sales DESC;

-- 5. Average Age by Gender
-- Calculates the average age of users by gender
SELECT 
    u.gender,
    AVG(u.age) AS avg_age
FROM 
    users u
GROUP BY 
    u.gender
ORDER BY 
    avg_age DESC;

-- 6. User Base by Age Group and Gender
-- Groups users by age categories and gender
SELECT 
    CASE 
        WHEN u.age BETWEEN 18 AND 25 THEN '18-25'
        WHEN u.age BETWEEN 26 AND 35 THEN '26-35'
        WHEN u.age BETWEEN 36 AND 45 THEN '36-45'
        WHEN u.age BETWEEN 46 AND 55 THEN '46-55'
        WHEN u.age > 55 THEN '55+'
        ELSE 'Unknown'
    END AS age_group,
    u.gender,
    COUNT(*) AS user_count
FROM 
    users u
GROUP BY 
    age_group, u.gender
ORDER BY 
    age_group;

-- 7. Top 5 Products by Sales
-- Retrieves the top 5 products based on total sales
SELECT 
    p.name AS product_name,
    SUM(oi.sale_price) AS total_sales
FROM 
    order_items oi
JOIN 
    products p ON oi.product_id = p.id
GROUP BY 
    p.name
ORDER BY 
    total_sales DESC
LIMIT 5;

-- 8. Sales by Product Category
-- Summarizes total sales by product category
SELECT 
    p.category AS product_category,
    SUM(oi.sale_price) AS total_sales
FROM 
    order_items oi
JOIN 
    products p ON oi.product_id = p.id
GROUP BY 
    p.category
ORDER BY 
    total_sales DESC;

-- 9. Sales Trends by Month
-- Calculates total sales by month
SELECT 
    EXTRACT(YEAR FROM o.created_at) AS year,
    EXTRACT(MONTH FROM o.created_at) AS month,
    SUM(oi.sale_price) AS total_sales
FROM 
    order_items oi
JOIN 
    orders o ON oi.order_id = o.order_id
GROUP BY 
    year, month
ORDER BY 
    year, month;

-- 10. Sales by Day of the Week
-- Summarizes total sales for each day of the week
SELECT 
    EXTRACT(DAYOFWEEK FROM o.created_at) AS day_of_week,
    SUM(oi.sale_price) AS total_sales
FROM 
    order_items oi
JOIN 
    orders o ON oi.order_id = o.order_id
GROUP BY 
    day_of_week
ORDER BY 
    day_of_week;

-- 11. Geographic Distribution of Customers by Country
-- Counts customers by country
SELECT 
    u.country,
    COUNT(DISTINCT u.id) AS customer_count
FROM 
    users u
GROUP BY 
    u.country
ORDER BY 
    customer_count DESC;

-- 12. Top 5 States by Customer Visits
-- Identifies the top states based on the number of unique visitors
SELECT 
    u.state,
    COUNT(DISTINCT u.id) AS visitor_count
FROM 
    users u
GROUP BY 
    u.state
ORDER BY 
    visitor_count DESC
LIMIT 5;

-- 13. Traffic Source Breakdown by Country
-- Shows traffic source effectiveness across different countries
SELECT 
    u.country,
    u.traffic_source,
    COUNT(o.order_id) AS order_count,
    SUM(oi.sale_price) AS total_sales
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.id
JOIN 
    order_items oi ON o.order_id = oi.order_id
GROUP BY 
    u.country, u.traffic_source
ORDER BY 
    total_sales DESC;

-- 14. Average Order Value by Traffic Source and Country
-- Calculates the average order value per traffic source and country
SELECT 
    u.country,
    u.traffic_source,
    AVG(oi.sale_price) AS avg_order_value
FROM 
    order_items oi
JOIN 
    orders o ON oi.order_id = o.order_id
JOIN 
    users u ON o.user_id = u.id
GROUP BY 
    u.country, u.traffic_source
ORDER BY 
    avg_order_value DESC;

-- 15. Repeat Customers by Country and Traffic Source
-- Identifies repeat customers by country and traffic source
SELECT 
    u.country,
    u.traffic_source,
    COUNT(DISTINCT o.user_id) AS repeat_customers
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.id
WHERE 
    (SELECT COUNT(*) FROM orders WHERE user_id = o.user_id) > 1
GROUP BY 
    u.country, u.traffic_source
ORDER BY 
    repeat_customers DESC;
